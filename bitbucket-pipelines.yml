# This is a sample build configuration for Docker.
# Check our guides at https://confluence.atlassian.com/x/O1toN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: docker:stable

pipelines:
  branches:
    develop:
      - step:
          caches:
            - docker
          services:
            - docker
          script: # Modify the commands below to build your repository.
            # Set $DOCKER_HUB_USERNAME and $DOCKER_HUB_PASSWORD as environment variables in repository settings
            - export IMAGE_NAME=tokamaktech/hummingbot:develop_$BITBUCKET_COMMIT
            - export IMAGE_NAME_LATEST=tokamaktech/hummingbot:develop_latest
            - export DOCKER_API_VERSION=1.39

            # build the Docker image (this will use the Dockerfile in the root of the repo)
            - docker build -t $IMAGE_NAME .
            # authenticate with the Docker Hub registry
            - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
            # push the new Docker image to the Docker registry
            - docker push $IMAGE_NAME 
            # tag new image with lastest suffix and push that to Docker registery
            - docker tag $IMAGE_NAME $IMAGE_NAME_LATEST
            - docker push $IMAGE_NAME_LATEST
    master:
      - step:
          caches:
            - docker
          services:
            - docker
          script: # Modify the commands below to build your repository.
            # Set $DOCKER_HUB_USERNAME and $DOCKER_HUB_PASSWORD as environment variables in repository settings
            - export IMAGE_NAME=tokamaktech/hummingbot:release_$BITBUCKET_COMMIT
            - export IMAGE_NAME_LATEST=tokamaktech/hummingbot:release_latest
            - export DOCKER_API_VERSION=1.39

            # build the Docker image (this will use the Dockerfile in the root of the repo)
            - docker build -t $IMAGE_NAME .
            # authenticate with the Docker Hub registry
            - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
            # push the new Docker image to the Docker registry
            - docker push $IMAGE_NAME
            # tag new image with lastest suffix and push that to Docker registery
            - docker tag $IMAGE_NAME $IMAGE_NAME_LATEST
            - docker push $IMAGE_NAME_LATEST 
options:
  size: 2x
definitions:
  services:
    docker:
      memory: 4096